
services:

  server:
        build:
            context: .
            dockerfile: ./automation/docker/Dockerfile
        container_name: server
        volumes:
            - ./:/var/www/html
        links:
            - mysql
        ports:
            - 81:80 
#        user: ${LOCAL_USER}    
#       environment:    
#          DATABASE_URL: "database://${MYSQL_USER:- user}:${MYSQL_PASSWORD:- pwd}@database:3306/${MYSQL_DATABASE:- app}"

###> doctrine/doctrine-bundle ###
  mysql:
    image: mysql:${MYSQL_VERSION:-8}
    container_name: mysql
    restart: always
    environment:
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    # healthcheck:
    #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #     timeout: 5s
    #     retries: 5
    #     start_period: 60s
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
        - 3307:3306
  
  phpmyadmin:
          image: phpmyadmin/phpmyadmin
          container_name: phpmyadmin
          depends_on:
             - mysql
          restart: always
          environment:
             PMA_HOST: mysql
            #  PMA_USER: admin
            #  PMA_PASSWORD: Afpa1234
             MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
          links:
              - mysql
          ports:
              - 8090:80
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  mysql_data:
###< doctrine/doctrine-bundle ###